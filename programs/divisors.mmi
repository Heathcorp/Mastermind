let N = 100;
let number = 1;

drain N into number {
  let num_copy = number;
  let divisor = 1;

  drain num_copy into divisor {
    let result;
    divisible(result, number, divisor);

    if result {
      print(divisor);
      output ' ';
    };
  };
  output 10;
};

def divisible(result, dividend, divisor) {
  // result = 0 if dividend % divisor = 0
  let b = dividend;

  let radix;
  let iterating = true;

  while iterating {

    radix = divisor;
    drain radix {
      --b;
      if not b {
        iterating = false;
      };
    };
  };
  // if there is no remainder then we are divisible
  if not b {
    result = true;
  };
};

def print(num) {
  let ones = num;
  let hundreds = -1;

  let iterating0 = true;
  while iterating0 {
    hundreds += 1;
    let const_100 = 100;
    drain const_100 {
      if not ones {
        iterating0 = false;
      };
      ones -= 1;
    };
    if not iterating0 {
      ones += 100;
    };
  };

  let tens = -1;

  let iterating1 = true;
  while iterating1 {
    tens += 1;
    let const_10 = 10;
    drain const_10 {
      if not ones {
        iterating1 = false;
      };
      ones -= 1;
    };
    if not iterating1 {
      ones += 10;
    };
  };

  let chars[3];
  let zero = '0';
  drain zero into chars[0] chars[1] chars[2];

  if hundreds {
    drain hundreds into chars[0];
    output chars[0];
    drain tens into chars[1];
    output chars[1];
  };
  if tens {
    drain tens into chars[1];
    output chars[1];
  };
  drain ones into chars[2];
  output chars[2];
};
